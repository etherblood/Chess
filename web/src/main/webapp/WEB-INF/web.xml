<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
         xmlns="http://java.sun.com/xml/ns/javaee" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">



    <!-- Servlets -->
    <display-name>Chess</display-name>
    <!-- Default page to serve -->
    <welcome-file-list>
        <welcome-file>/index.html</welcome-file>
    </welcome-file-list>

    <context-param>
        <param-name>appId</param-name>
        <param-value>noname</param-value>
    </context-param>

		
    <!-- 		<param-value>whitelabel</param-value> -->
    <!--  <description>An Id for the application like sins24, slave24 etc. It is used to locate the config etc.
    In production the chatAppId is overwriten by the servlet context.
    </description>  -->
		
    <error-page>
        <location>/error.html</location>
    </error-page>

    <session-config>
        <!-- In Minutes = 1 Hour -->
        <session-timeout>60</session-timeout>
    </session-config>



    <!-- SPRING CONFIG -->
    <!-- The parent context in which to find the service beans def -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:main_spring_context.xml
        </param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <!-- Needed to access the http session -->
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>
	
    <!-- Listener to notify spring security about new http-session. Needed for Limitation for one single session
   via <session-management> <concurrency-control>
    -->
    <listener>
        <listener-class>
            org.springframework.security.web.session.HttpSessionEventPublisher
        </listener-class>
    </listener>
	
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
    </filter-mapping>
	
    <!-- Security follows -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ASYNC</dispatcher>
    </filter-mapping>

    <!-- Spring mvc dispatcher - Beware as spring mvc has a private context 
    http://www.dotkam.com/2008/07/09/spring-web-application-context-visibility/ -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>
</web-app>
